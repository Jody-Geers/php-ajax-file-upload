{"filter":false,"title":"FileUpload.php","tooltip":"/modules/file-upload/bin/FileUpload.php","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":134,"column":0},"end":{"row":134,"column":2}},"text":"?>"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":134,"column":0}},"nl":"\r\n","lines":["<?php","","class FileUpload {","\t","\t// relative to current location","\tconst UPLOAD_DIR = '../../uploads/';","\t","\tprivate $_fileName = null;","\tprivate $_fileTempName = null;","\tprivate $_fileSizeBytes = null;","\tprivate $_fileType = null;","\tprivate $_fileUploadError = null;","","\t/**","\t * File Upload Handler.","\t * @return {Object} fileUpload","\t * @access public","\t */","\tpublic function FileUpload( $argsArr ) {","\t\t","\t\t$this->_fileName = $argsArr['fileName'];","\t\t$this->_fileType = $argsArr['fileType'];","\t\t$this->_fileSizeBytes = $argsArr['fileSizeBytes'];","\t\t$this->_fileTempName = $argsArr['fileTempName'];","\t\t$this->_fileUploadError = $argsArr['fileUploadError'];","\t\t","\t}","\t","\t/**","\t * Has the file uploaded.","\t * @access private","\t * @return {boolean} - false if validation fail","\t */","\tprivate function _isFileUploadedSucessfully() {","\t\t","\t\tif ( $this->_fileUploadError > 0 ) {","\t\t","\t\t\techo 'File upload failed' . '<br/>';","\t\t","\t\t\treturn false;","\t\t","\t\t}","\t\t","\t\treturn true;","\t\t","\t}","\t","\t/**","\t * File at location allready exists.","\t * @access private","\t * @return {boolean} - false if validation fail","\t */","\tprivate function _isNoDuplicationOfFile() {","\t\t","\t\tif ( file_exists( FileUpload::UPLOAD_DIR . $this->_fileName ) ) {","\t\t","\t\t\techo 'File already exists.' . '<br/>';","\t\t\t","\t\t\treturn false;","\t\t","\t\t}","\t\t","\t\treturn true;","\t\t","\t}","\t","\t/**","\t * Echos out data of sucessful file upload.","\t * @access private","\t */","\tprivate function _successfulOutputUI() {","\t\t","\t\techo '_fileName - ' . $this->_fileName . '<br>';","\t\techo '_fileType - ' . $this->_fileType . '<br>';","\t\techo '_fileSizeBytes - ' . ( $this->_fileSizeBytes / 1024 ) . ' KB<br>';","\t\techo '_fileTempName - ' . $this->_fileTempName . '<br>';","\t\t","\t}","\t","\t/**","\t * Handles incoming file, saves to ./uploads","\t * @access public","\t */","\tpublic function handleFileUpload() {","\t\t","\t\t// Error in upload","\t\tif ( !$this->_isFileUploadedSucessfully() ) {","\t\t\t\t","\t\t\techo 'File Upload - failed' . '<br/>';","\t\t\t","\t\t\theader( 'HTTP/1.1 400 Bad Request', true, 400 );","\t\t\t\t","\t\t\treturn;","\t\t\t\t","\t\t}\t\t","\t\t","\t\t// Input Validation","\t\t$fileUploadValidation = new FileUploadValidation( array(","\t\t\t'fileName' => $this->_fileName,","\t\t\t'fileType' => $this->_fileType,","\t\t\t'fileSizeByes' => $this->_fileSizeBytes","\t\t));","\t\t","\t\tif ( !$fileUploadValidation->isFileUploadValidationPass() ) {","\t\t\t","\t\t\techo 'File Upload Validation - failed' . '<br/>';","\t\t\t","\t\t\theader( 'HTTP/1.1 400 Bad Request', true, 400 );","\t\t\t","\t\t\treturn;","\t\t\t","\t\t}","\t\t","\t\t// File not a duplicate","\t\tif ( !$this->_isNoDuplicationOfFile() ) {","\t\t","\t\t\techo 'File duplication error.' . '<br/>';","\t\t\t","\t\t\theader( 'HTTP/1.1 400 Bad Request', true, 400 );","\t\t","\t\t\treturn;","\t\t","\t\t}","\t\t","\t\t// Move file to ./uploads","\t\tmove_uploaded_file( $this->_fileTempName, FileUpload::UPLOAD_DIR . $this->_fileName );","\t\t","\t\t// Successful output UI","\t\t$this->_successfulOutputUI();","\t\t","\t}","\t","}",""]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":5}},"text":"<?php"},{"action":"insertText","range":{"start":{"row":0,"column":5},"end":{"row":1,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":128,"column":0}},"lines":["","class FileUpload {","\t","\t// relative to current location","\tconst UPLOAD_DIR = '../../uploads/';","\t","\tprivate $_file = null;","","\t/**","\t * File Upload Handler.","\t * @return {Object} fileUpload","\t * @access public","\t */","\tpublic function FileUpload( $argsObj ) {","\t\t","\t\t$this->_file = $argsObj;","\t\t","\t}","\t","\t/**","\t * Has the file uploaded.","\t * @access private","\t * @return {boolean} - false if validation fail","\t */","\tprivate function _isFileUploadedSucessfully() {","\t\t","\t\tif ( $this->_file->fileUploadError > 0 ) {","\t\t","\t\t\techo 'Error in file upload' . '<br/>';","\t\t","\t\t\treturn false;","\t\t","\t\t}","\t\t","\t\treturn true;","\t\t","\t}","\t","\t/**","\t * File at location allready exists.","\t * @access private","\t * @return {boolean} - false if validation fail","\t */","\tprivate function _isNoDuplicationOfFile() {","\t\t","\t\tif ( file_exists( FileUpload::UPLOAD_DIR . $this->_file->fileName ) ) {","\t\t","\t\t\techo 'File already exists.' . '<br/>';","\t\t\t","\t\t\treturn false;","\t\t","\t\t}","\t\t","\t\treturn true;","\t\t","\t}","\t","\t/**","\t * Echos out data of sucessful file upload.","\t * @return {string} - html ui output","\t * @access private","\t */","\tprivate function _successfulOutputUI() {","\t\t","\t\t$returnUi = '';","\t\t","\t\t$returnUi .= '<div class=\"width-half float-left\"><img src=\"/uploads/' . $this->_file->fileName . '\" class=\"width-whole\"/></div>';","","\t\t$returnUi .= '<div class=\"width-half float-left text-center\">' ","\t\t\t\t  . 'fileName:' . '<br/>' . $this->_file->fileName . '<br>'","\t\t\t\t  . 'fileType:' . '<br/>' . $this->_file->fileType . '<br>'","\t\t\t\t  . 'fileSizeBytes:' . '<br/>' . ( $this->_file->fileSizeBytes / 1024 ) . ' KB<br>'","\t\t\t\t  . 'fileTempName:' . '<br/>' . $this->_file->fileTempName . '<br>'","\t\t\t\t  . '</div>'","  \t\t;","  \t\t","  \t\treturn $returnUi;","\t\t","\t}","\t","\t/**","\t * Handles incoming file, saves to ./uploads","\t * @return {boolean} - false if process fail","\t * @return {string} - html output if successful","\t * @access public","\t */","\tpublic function handleFileUpload() {","\t\t","\t\t// Error in upload","\t\tif ( !$this->_isFileUploadedSucessfully() ) {","\t\t\t\t","\t\t\techo 'File Upload - failed' . '<br/>';","\t\t\t\t","\t\t\treturn false;","\t\t\t\t","\t\t}\t\t","\t\t","\t\t// Input Validation","\t\t$fileUploadValidation = new FileUploadValidation( $this->_file );","\t\t","\t\tif ( !$fileUploadValidation->isFileUploadValidationPass() ) {","\t\t\t","\t\t\techo 'File Upload Validation - failed' . '<br/>';","\t\t\t","\t\t\treturn false;","\t\t\t","\t\t}","\t\t","\t\t// File not a duplicate","\t\tif ( !$this->_isNoDuplicationOfFile() ) {","\t\t","\t\t\techo 'File duplication error.' . '<br/>';","\t\t","\t\t\treturn false;","\t\t","\t\t}","\t\t","\t\t// Move file to ./uploads","\t\tmove_uploaded_file( $this->_file->fileTempName, FileUpload::UPLOAD_DIR . $this->_file->fileName );","\t\t","\t\t// Successful output UI","\t\treturn $this->_successfulOutputUI();","\t\t","\t}","\t","}",""]},{"action":"insertText","range":{"start":{"row":128,"column":0},"end":{"row":128,"column":2}},"text":"?>"}]}]]},"ace":{"folds":[],"scrolltop":528,"scrollleft":0,"selection":{"start":{"row":128,"column":2},"end":{"row":128,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1408096349083,"hash":"2c08cec04b6b4d6d3d9ac0629f1e8c8ad2379f41"}